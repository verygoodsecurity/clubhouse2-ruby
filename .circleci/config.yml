# === COMMON TEMPLATES ===
job-defaults: &job-defaults
  working_directory: &working_directory
    ~/clubhouse2-ruby

# Persists workspace so it can be attached in another jobs as soon as it was checked out and built
persist-workspace: &persist-workspace
  persist_to_workspace:
    root: .
    paths: "*"

attach-workspace: &attach-workspace
  attach_workspace:
    at: *working_directory

# === JOBS ===
version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 1 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.0-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAKE_ENV: test
    steps: # a collection of executable commands
      - <<: *attach-workspace
      - checkout # special step to check out source code to working directory

      - run:
          name: Install bundler
          command: gem install bundler:2.0.1

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: |
            export BUNDLE_GEM__FURY__IO=$GEMFURY_DEPLOY_TOKEN
            bundle install --path $BUNDLE_PATH

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: gem-cache--{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Run rspec tests
          command: |
            bundle exec rspec --profile 10 \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results

      - <<: *persist-workspace

  build-gem-master:
    <<: *job-defaults
    docker:
    machine:
      enabled: true
    steps:
      - <<: *attach-workspace
      - run:
          name: Build a snapshot version
          command: |
            export CH_RUBY_VERSION=0.0.1-$(echo ${CIRCLE_SHA1} | cut -c1-8)
            gem build clubhouse2.gemspec
      - <<: *persist-workspace
  build-gem-tag:
    <<: *job-defaults
    docker:
    machine:
      enabled: true
    steps:
      - <<: *attach-workspace
      - run:
          name: Build a tagged version
          command: |
            export CH_RUBY_VERSION=$(echo $CIRCLE_TAG | cut -c2-30)
            gem build clubhouse2.gemspec
      - <<: *persist-workspace

  publish-gem-master:
    <<: *job-defaults
    docker:
    machine:
      enabled: true
    steps:
      - <<: *attach-workspace
      - run:
          name: Publish a snapshot version
          command: |
            export CH_RUBY_VERSION=0.0.1.pre.$(echo ${CIRCLE_SHA1} | cut -c1-8)
            curl -F package=@clubhouse2-$CH_RUBY_VERSION.gem https://$GEMFURY_PUSH_TOKEN@push.fury.io/osklyarenko/
      - <<: *persist-workspace


  publish-gem-tag:
    <<: *job-defaults
    docker:
    machine:
      enabled: true
    steps:
      - <<: *attach-workspace
      - run:
          name: Publish a tagged version
          command: |
            export CH_RUBY_VERSION=$(echo $CIRCLE_TAG | cut -c2-30)
            curl -F package=@clubhouse2-$CH_RUBY_VERSION.gem https://$GEMFURY_PUSH_TOKEN@push.fury.io/osklyarenko/
      - <<: *persist-workspace

workflows:
  version: 2
  test_and_build:
    jobs:
      - build:
          context: private-rubygems
          filters:
            tags:
              only: /.*/
      - build-gem-master:
          context: private-rubygems
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master

      - publish-gem-master:
          context: private-rubygems
          requires:
            - build-gem-master
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master

      - build-gem-tag:
          context: private-rubygems
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-gem-tag:
          context: private-rubygems
          requires:
            - build-gem-tag
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

